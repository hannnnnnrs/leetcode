https://leetcode.cn/problems/1fGaJU/description/
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
            if(i>0&&nums[i]==nums[i-1]) // 第一个元素去重
                continue;
            HashSet<Integer> tmp=new HashSet<>();
            int left=i+1;
            int right=nums.length-1;
            while(left<right){
                if(nums[left]+nums[right]>-nums[i])
                    right--;
                else if(nums[left]+nums[right]<-nums[i])
                    left++;
                else {
                    if(!tmp.contains(nums[left])){ // 第二个元素去重
                        tmp.add(nums[left]);
                        List<Integer> list=new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[left]);
                        list.add(nums[right]);
                        ans.add(list);
                    }
                    right--;
                }
            }
        }
        return ans;
    }
}
